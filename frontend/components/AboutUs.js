import React from 'react';
import Image from 'next/image';
import Lauren from '../img/Lauren.jpeg';
import deiosha from '../img/deiosha.JPG';
import jerry from '../img/jerry.jpeg';
import manuch from '../img/manuch.jpeg';

export default function AboutUs() {
  const containerStyle = {
    display: 'flex',
    flexWrap: 'wrap',
    justifyContent: 'center',
  };

  const contentContainerStyle = {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    margin: '20px', 
    padding: '20px',
    border: '1px solid #ccc', 
    borderRadius: '8px', 
    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', 
  };

  const centeredStyle = {
    textAlign: 'center',
    marginBottom: '10px', 
  };

  const imageStyle = {
    width: '200px', 
    height: '200px', 
    objectFit: 'cover', 
    borderRadius: '50%', 
  };

  const linkStyle = {
    textDecoration: 'none', 
    color: '#0070f3', 
    fontWeight: 'bold', 
    marginLeft: '5px', 
  };

  const teamMembers = [
    {
      name: 'Deiosha Sparks',
      image: deiosha,
      githubLink: 'https://github.com/Deiosha',
      linkedinLink: 'https://www.linkedin.com/in/deiosha-sparks-954882251/',
    },
    {
      name: 'Jerry Barrows-Fitzgerald',
      image: jerry,
      githubLink: 'https://github.com/jbarrfitz',
      linkedinLink:'https://www.linkedin.com/in/jbarrowsfitzgerald/',
    },
    {
      name: 'Lauren Main',
      image: Lauren,
      githubLink: 'https://github.com/elleem',
      linkedinLink:'https://www.linkedin.com/in/laurenmain28/',
    },
    {
      name: 'Manuch Sadri',
      image: manuch,
      githubLink: 'https://github.com/mcsadri',
      linkedinLink: 'https://www.linkedin.com/in/manuch-sadri/',
    },
  ];

  const creditContainerStyle = {
    marginTop: '40px',
    textAlign: 'center',
    fontSize: '16px',
  };
  
  const models = [
    {
      name: 'GPT-2',
      description: 'A pretrained model using a large body of English raw texts, with no humans labelling them in anyway. Trained to guess the next work in sentences. ',
      link: 'https://huggingface.co/gpt2',
    }, 
    {
      name: 'GPT-Neo-125M',
      description: 'A transformer model trained to use an inner representation of the English language to extract features useful for downstream tasks',
      link: 'https://huggingface.co/EleutherAI/gpt-neo-125m',
    }, 
    {
      name: 'gpt2-XL',
      description: 'A language model created and released by OpenAI for writing assistance and entertainment, like games and chatbots.',
      link: 'https://huggingface.co/gpt2-xl',
    }, 
    {
      name: 'Distil GPT2',
      description: 'An English language model pre-trainged with the supervision of the 124 million parameter version of GPT-2, this specific model has 82 million parameters.',
      link: 'https://huggingface.co/distilgpt2',
    }, 
    {
      name: 'Puma',
      description: 'An OpenLLaMA 3B V2 model finetuned on ShareGPTHyperfiltered, which is a machine learning dataset with 90 sharegpt conversations broken down into about 3,000 filters, keyword detections, and dedupings.',
      link: 'https://huggingface.co/acrastt/Puma-3B',
    }, 
    {
      name: 'Astrid',
      description: 'A GPT-NeoX model for causal language modeling designed to generate human-like text.',
      link: 'https://huggingface.co/PAIXAI/Astrid-1B-CPU',
    }, 
    {
      name: 'OpenAI GPT',
      description: 'A text generation model that allows you to type a custom snippet to help you complete your thoughts.',
      link: 'https://huggingface.co/openai-gpt',
    }, 
    {
      name: 'Deci',
      description: 'A one billion parameter decoder-only code completion model generated by Deci via Neural Architecture Search-based technology.',
      link: 'https://huggingface.co/Deci/DeciCoder-1b',
    }, 
    {
      name: 'Bloom',
      description: 'A BioScience Large Open-science Open-access Multilingual Language Model from July 2022 with over 59 different languages.',
      link: 'https://huggingface.co/bigscience/bloom',
    }, 
    
  ]
    
  

  return (
    <div>
      <h2 style={centeredStyle}>About Us</h2>
      <div style={containerStyle}>
        {teamMembers.map((member, index) => (
          <div key={index} style={contentContainerStyle}>
            <h3 style={centeredStyle}>{member.name}</h3>
            <div style={centeredStyle}>
              <Image src={member.image} alt={member.name} style={imageStyle} />
            </div>
            <p>
              GitHub{' '}
              <a
                href={member.githubLink}
                target="_blank"
                rel="noopener noreferrer"
                style={linkStyle}
              >
                here
              </a>
              {member.linkedinLink && (
                <span>
                  , LinkedIn{' '}
                  <a
                    href={member.linkedinLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    style={linkStyle}
                  >
                    here
                  </a>
                </span>
              )}
            </p>
          </div>
        ))}
      </div>
      <div style={creditContainerStyle}>
      <h3 style={centeredStyle}>Credits</h3>
        <p>Special thanks to <a href="https://huggingface.co/" target="_blank" rel="noopener noreferrer" style={linkStyle}>Hugging Face</a> for their incredible api that powered our application.</p>
      </div>
      <div style={{marginTop: '40px'}}>
        <h3 style={centeredStyle}>Models We Used</h3>
      <div style={containerStyle}>
        {models.map((model, index) => (
          <div key={index} style={contentContainerStyle}>
            <h4 style={centeredStyle}><a href={model.link} target="_blank" rel="noopener noreferrer" style={linkStyle}>{model.name}</a></h4>
            <p>{model.description}</p>
          </div>
        ))}
      </div>
      </div>
    </div>
  );
}
